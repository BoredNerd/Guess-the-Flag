# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'game_flag.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import os
import random
import sys


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(889, 680)
        MainWindow.setStyleSheet("background-color : #161219;")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayoutWidget_2 = QtWidgets.QWidget(self.centralwidget)
        self.gridLayoutWidget_2.setGeometry(QtCore.QRect(40, 360, 801, 311))
        self.gridLayoutWidget_2.setObjectName("gridLayoutWidget_2")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.gridLayoutWidget_2)
        self.gridLayout_2.setSizeConstraint(QtWidgets.QLayout.SetDefaultConstraint)
        self.gridLayout_2.setContentsMargins(37, 0, 7, 0)
        self.gridLayout_2.setHorizontalSpacing(46)
        self.gridLayout_2.setVerticalSpacing(7)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.pushButton_1 = QtWidgets.QPushButton(self.gridLayoutWidget_2)
        self.pushButton_1.setEnabled(True)
        self.pushButton_1.setMinimumSize(QtCore.QSize(355, 111))
        self.pushButton_1.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.pushButton_1.setStyleSheet("QPushButton{\n"
                                        "    border: 4px  groove #BC006C;\n"
                                        "    border-radius: 20px;\n"
                                        "    color:white;\n"
                                        "    font: 20pt \"Lexend SemiBold\";\n"
                                        "}\n"
                                        "QPushButton:hover{\n"
                                        "    background-color : #800048;\n"
                                        "    \n"
                                        "}\n"
                                        "")
        self.pushButton_1.setObjectName("pushButton_1")
        self.gridLayout_2.addWidget(self.pushButton_1, 0, 0, 1, 1)
        self.pushButton_2 = QtWidgets.QPushButton(self.gridLayoutWidget_2)
        self.pushButton_2.setEnabled(True)
        self.pushButton_2.setMinimumSize(QtCore.QSize(355, 111))
        self.pushButton_2.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.pushButton_2.setStyleSheet("QPushButton{\n"
                                        "    border: 4px  groove #BC006C;\n"
                                        "    border-radius: 20px;\n"
                                        "    color:white;\n"
                                        "    font: 20pt \"Lexend SemiBold\";\n"
                                        "}\n"
                                        "QPushButton:hover{\n"
                                        "    background-color : #800048;\n"
                                        "    \n"
                                        "}\n"
                                        "")
        self.pushButton_2.setObjectName("pushButton_2")
        self.gridLayout_2.addWidget(self.pushButton_2, 0, 1, 1, 1)
        self.pushButton_3 = QtWidgets.QPushButton(self.gridLayoutWidget_2)
        self.pushButton_3.setEnabled(True)
        self.pushButton_3.setMinimumSize(QtCore.QSize(355, 111))
        self.pushButton_3.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.pushButton_3.setStyleSheet("QPushButton{\n"
                                        "    border: 4px  groove #BC006C;\n"
                                        "    border-radius: 20px;\n"
                                        "    color:white;\n"
                                        "    font: 20pt \"Lexend SemiBold\";\n"
                                        "}\n"
                                        "QPushButton:hover{\n"
                                        "    background-color : #800048;\n"
                                        "    \n"
                                        "}\n"
                                        "")
        self.pushButton_3.setObjectName("pushButton_3")
        self.gridLayout_2.addWidget(self.pushButton_3, 1, 0, 1, 1)
        self.pushButton_4 = QtWidgets.QPushButton(self.gridLayoutWidget_2)
        self.pushButton_4.setEnabled(True)
        self.pushButton_4.setMinimumSize(QtCore.QSize(355, 111))
        self.pushButton_4.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.pushButton_4.setStyleSheet("QPushButton{\n"
                                        "    border: 4px  groove #BC006C;\n"
                                        "    border-radius: 20px;\n"
                                        "    color:white;\n"
                                        "    font: 20pt \"Lexend SemiBold\";\n"
                                        "}\n"
                                        "QPushButton:hover{\n"
                                        "    background-color : #800048;\n"
                                        "    \n"
                                        "}\n"
                                        "")
        self.pushButton_4.setObjectName("pushButton_4")
        self.gridLayout_2.addWidget(self.pushButton_4, 1, 1, 1, 1)
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(180, 40, 541, 311))
        self.label.setText("")
        self.label.setObjectName("label")
        MainWindow.setCentralWidget(self.centralwidget)
        self.randomflag()
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def randomflag(self):  # set the flag on the label
        self.flagfile = random.choice(range(len(os.listdir("./flagcode/"))))  # choose a flag from the  folder flagcode
        print("name flag :" + os.listdir('./flagcode/')[self.flagfile].replace(".svg", ""))
        print("index flag in dir  " + str(self.flagfile))
        self.label.setStyleSheet( f"image : url(flagcode/{os.listdir('./flagcode/')[self.flagfile]})")  # set the chosen flag on the label
        self.randomnumber = random.randint(1,4)  # the name of the country of the flag will be stored inside a random button, if randomnumber = 1 then it will be stored in the first button, if 2 in the second button and so on..
        self.retranslateUi()

    def retranslateUi(self):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        list_flag = self.generateotherflag()  # generate other country name and return a list containg 3 different index

        # self.pushButton_1.setEnabled(True)
        # self.pushButton_2.setEnabled(True)
        # self.pushButton_3.setEnabled(True)
        # self.pushButton_4.setEnabled(True)
        if self.randomnumber == 1:  # set the country name of the flag on the button number 1
            # self.pushButton_2.setEnabled(False)
            # self.pushButton_3.setEnabled(False)
            # self.pushButton_4.setEnabled(False)
            print("1 number")
            print("---------------------")
            self.pushButton_1.setText(
                os.listdir('./flagcode/')[self.flagfile].replace(".svg", ""))  # set name of the right country
            self.pushButton_1.clicked.connect(self.randomflag)  # if button clicked, calls function randomflag - which basically it replaces the flag of the label to another flag and changes button's text
            self.pushButton_2.setText(
                os.listdir('./flagcode/')[list_flag[0]].replace(".svg", ""))  # set name of the wrong country
            self.pushButton_3.setText(
                os.listdir('./flagcode/')[list_flag[1]].replace(".svg", ""))  # set name of the wrong country
            self.pushButton_4.setText(
                os.listdir('./flagcode/')[list_flag[2]].replace(".svg", ""))  # set name of the wrong country

        elif self.randomnumber == 2:  # set the country name of the flag on the button number 2
            # self.pushButton_1.setEnabled(False)
            # self.pushButton_3.setEnabled(False)
            # self.pushButton_4.setEnabled(False)
            print("2 number")
            print("---------------------")
            self.pushButton_1.setText(os.listdir('./flagcode/')[list_flag[0]].replace(".svg", ""))  # set name of the wrong country
            self.pushButton_2.setText(os.listdir('./flagcode/')[self.flagfile].replace(".svg", ""))  # set name of the right country
            self.pushButton_2.clicked.connect(self.randomflag)  # if button clicked, calls function randomflag - which basically it replaces the flag of the label to another flag and changes button's text
            self.pushButton_3.setText(os.listdir('./flagcode/')[list_flag[1]].replace(".svg", ""))  # set name of the wrong country
            self.pushButton_4.setText(os.listdir('./flagcode/')[list_flag[2]].replace(".svg", ""))  # set name of the wrong country

        elif self.randomnumber == 3:  # set the country name of the flag on the button number 3
            # self.pushButton_1.setEnabled(False)
            # self.pushButton_2.setEnabled(False)
            # self.pushButton_4.setEnabled(False)
            print("3 numero")
            print("---------------------")
            self.pushButton_1.setText(os.listdir('./flagcode/')[list_flag[0]].replace(".svg", ""))  # set name of the wrong country
            self.pushButton_2.setText(os.listdir('./flagcode/')[list_flag[1]].replace(".svg", ""))  # set name of the wrong country
            self.pushButton_3.setText(os.listdir('./flagcode/')[self.flagfile].replace(".svg", ""))  # set name of the right country
            self.pushButton_3.clicked.connect(self.randomflag)  # if button clicked, calls function randomflag - which basically it replaces the flag of the label to another flag and changes button's text
            self.pushButton_4.setText(os.listdir('./flagcode/')[list_flag[2]].replace(".svg", ""))  # set name of the wrong country

        else:  # set the country name of the flag on the button number 4
            # self.pushButton_1.setEnabled(False)
            # self.pushButton_2.setEnabled(False)
            # self.pushButton_3.setEnabled(False)
            print("4 number")
            print("---------------------")
            self.pushButton_1.setText(os.listdir('./flagcode/')[list_flag[0]].replace(".svg", ""))  # set name of the wrong country
            self.pushButton_2.setText(os.listdir('./flagcode/')[list_flag[1]].replace(".svg", ""))  # set name of the wrong country
            self.pushButton_3.setText(os.listdir('./flagcode/')[list_flag[2]].replace(".svg", ""))  # set name of the wrong country
            self.pushButton_4.setText(os.listdir('./flagcode/')[self.flagfile].replace(".svg", "")) # set name of the right country
            self.pushButton_4.clicked.connect(self.randomflag)  # if button clicked, calls function randomflag - which basically it replaces the flag of the label to another flag and changes button's text

    def generateotherflag(self):
        list_flag = []  # empty list
        for i in range(3):
            x = random.choice(list(range(0, self.flagfile)) + list(range(self.flagfile + 1, 263)))  # choose country name except the country name of the label
            if x not in list_flag:
                list_flag.append(x)
            else:  # if x is already in list, there will be a while true loop to generate a number that is not present in the list, therefore the button will not have the same name country
                while True:
                    x = random.choice(list(range(0, self.flagfile)) + list(range(self.flagfile + 1, 263)))
                    if x not in list_flag:
                        list_flag.append(x)
                        break
        return list_flag  # return a list containg 3 different random number and also they are not equal to index of country flag of the label


if __name__ == "__main__":
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
